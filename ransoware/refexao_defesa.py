class ReflexaoDefesa:
    """
    Documenta√ß√£o sobre medidas de preven√ß√£o e defesa contra malwares
    """
    
    @staticmethod
    def medidas_prevencao():
        """Lista medidas de preven√ß√£o contra ransomware e keyloggers"""
        
        medidas = {
            "Antiv√≠rus/Antimalware": [
                "Use solu√ß√µes reputadas (Bitdefender, Kaspersky, Windows Defender)",
                "Mantenha as defini√ß√µes de v√≠rus atualizadas",
                "Configure varreduras autom√°ticas regulares",
                "Ative prote√ß√£o em tempo real"
            ],
            
            "Firewall": [
                "Habilite firewall de rede",
                "Configure regras de tr√°fego de sa√≠da",
                "Monitore conex√µes suspeitas",
                "Use firewall de aplica√ß√£o"
            ],
            
            "Sandboxing": [
                "Execute arquivos suspeitos em ambiente isolado",
                "Use m√°quinas virtuais para testes",
                "Implemente cont√™ineres para aplica√ß√µes",
                "Utilize browsers sandboxed"
            ],
            
            "Conscientiza√ß√£o do Usu√°rio": [
                "N√£o abra anexos de emails desconhecidos",
                "Verifique URLs antes de clicar",
                "Use senhas fortes e autentica√ß√£o multi-fator",
                "Mantenha sistemas e aplica√ß√µes atualizados"
            ],
            
            "Backup e Recupera√ß√£o": [
                "Mantenha backups regulares offline/cloud",
                "Teste restaura√ß√µes periodicamente",
                "Use a regra 3-2-1 (3 c√≥pias, 2 m√≠dias, 1 offsite)",
                "Proteja backups com senhas fortes"
            ],
            
            "Detec√ß√£o e Resposta": [
                "Monitore tr√°fego de rede an√¥malo",
                "Implemente SIEM/SOC",
                "Configure alertas para atividades suspeitas",
                "Tenha um plano de resposta a incidentes"
            ]
        }
        
        print("üõ°Ô∏è MEDIDAS DE PREVEN√á√ÉO E DEFESA")
        print("=" * 60)
        
        for categoria, itens in medidas.items():
            print(f"\nüìã {categoria}:")
            for item in itens:
                print(f"   ‚úÖ {item}")
    
    @staticmethod
    def deteccao_ransomware():
        """Sinais de detec√ß√£o de ransomware"""
        print("\nüîç SINAIS DE RANSOMWARE:")
        sinais = [
            "Extens√µes de arquivo alteradas (.encrypted, .locked)",
            "Arquivos de resgate (README.txt, HELP_DECRYPT.html)",
            "Atividade alta de CPU/Disco sem motivo aparente",
            "Acesso a muitos arquivos em sequ√™ncia",
            "Comunica√ß√£o com IPs suspeitos"
        ]
        
        for sinal in sinais:
            print(f"   ‚ö†Ô∏è {sinal}")
    
    @staticmethod
    def deteccao_keylogger():
        """Sinais de detec√ß√£o de keylogger"""
        print("\nüîç SINAIS DE KEYLOGGER:")
        sinais = [
            "Processos suspeitos no gerenciador de tarefas",
            "Arquivos de log em locais incomuns",
            "Tr√°fego de rede peri√≥dico contendo dados de teclas",
            "Atraso na digita√ß√£o",
            "Hook de teclado n√£o autorizado"
        ]
        
        for sinal in sinais:
            print(f"   ‚ö†Ô∏è {sinal}")
